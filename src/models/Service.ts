/* tslint:disable */
/* eslint-disable */
/**
 * Streaming Availability API
 * Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 58 countries!
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceCountryInfo } from './ServiceCountryInfo';
import {
    ServiceCountryInfoFromJSON,
    ServiceCountryInfoFromJSONTyped,
    ServiceCountryInfoToJSON,
} from './ServiceCountryInfo';

/**
 * Details of a service.
 * @export
 * @interface Service
 */
export interface Service {
    /**
     * Id of the service.
     * @type {string}
     * @memberof Service
     */
    id: string;
    /**
     * Map of 2-letter country ISO code to details of the service in that country.
     * @type {{ [key: string]: ServiceCountryInfo; }}
     * @memberof Service
     */
    countries: { [key: string]: ServiceCountryInfo; };
}

/**
 * Check if a given object implements the Service interface.
 */
export function instanceOfService(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "countries" in value;

    return isInstance;
}

export function ServiceFromJSON(json: any): Service {
    return ServiceFromJSONTyped(json, false);
}

export function ServiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Service {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'countries': (mapValues(json['countries'], ServiceCountryInfoFromJSON)),
    };
}

export function ServiceToJSON(value?: Service | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'countries': (mapValues(value.countries, ServiceCountryInfoToJSON)),
    };
}

